import numpy as np
import cv2 as cv

from picamera import PiCamera
from time import sleep

cap = cv.VideoCapture(0)

desiredMarker = 1

while cap.isOpened()
  if not x:
    print('Didn't get the frame. Ending the operation')
    break
    
  dictionary = cv.aruco.getPredefinedDictionary(cv.aruco.DICT_6x6_1000)
  arguments = cv.aruco.DetectorParameters_create()
  (corners, ids, rejectedImgPoints) = cv.aruco.detectMarkers(getFrame, dictionary, parameters = arguments)
  
  if ids is None:
    print('No markers found')
    
  else:
    if any([desiredMarker] in nested_list for nested_list in ids):
      horizontalPixels = getFrame.shape[1]
        verticalPixels = getFrame.shape[0]
        #print (horizontalPixels)
        #print(verticalPixels)
        horizontalFOV = 66
        halfView = horizontalFOV / 2
        #Getting the approximate pixel locations of the marker
        marker = corners[0]
        #print(marker)
        #Gets the x and y coordinates of the top left corner
        topLeft = marker[0,0]
        x1 = topLeft[0]
        y1 = topLeft[1]
        #Gets the x coordinate of the top right corner
        topRight = marker[0,1]
        x2 = topRight[0]
        y2 = topRight[1]
        #Gets the x coordinate of the bottom right corner
        botRight = marker[0,2]
        x3 = botRight[0]
        y3 = botRight[1]
        #Gets the x coordinate of the bottom left corner
        botLeft = marker[0,3]
        x4 = botLeft[0]
        y4 = botLeft[1]
        #Approximates pixel location based on corner locations
        xCenter = (x1+x2+x3+x4)/4
        yCenter = (y1+y2+y3+y4)/4
        print(xCenter)
        #Calculates the angle
        xPixFromCenter = (horizontalPixels/2) - xCenter
        angle = halfView*(xPixFromCenter/(horizontalPixels/2))
        #print('The first marker is ', angle, 'degrees away from the center of the image')
       
        
     
        #Approximates pixel location based on corner locations
        yTopCenter = (y1+y2)/2
        yBotCenter = (y3+y4)/2
        markerHeight = abs(yTopCenter-yBotCenter)
        print(markerHeight)
