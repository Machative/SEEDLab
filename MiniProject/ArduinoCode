#include <Encoder.h>
#include <Wire.h>

#define EN 4
#define M1DIR 7
#define M1SPD 9
#define SLAVE_ADDRESS 0x04

double Kp=3;
double Kd=0;
double Ki=50;

double pos=0;
double desiredPos=0;

Encoder motorA(2,4);

void setup() {
  Serial.begin(115200);
  Wire.begin(SLAVE_ADDRESS);
  
  pinMode(EN,OUTPUT);
  pinMode(M1DIR, OUTPUT);
  pinMode(M1SPD, OUTPUT);

  digitalWrite(EN,HIGH);
  digitalWrite(M1DIR,LOW);//LOW = CLKWISE
  Wire.onReceive(receiveData);
  Wire.onRequest(sendData);
}

void receiveData(int byteCount){
  while(Wire.available()) {
    uint8_t quadrant = Wire.read();
    switch(quadrant){
      case 1:
        desiredPos=0;
        break;
      case 2:
        desiredPos=PI/2;
        break;
      case 3:
        desiredPos=PI;
        break;
      case 4:
        desiredPos=3*PI/2;
        break;
    }
    Serial.print("desired pos: ");
    Serial.println(desiredPos);
  }
}

void sendData(){
  byte posArr[2];
  posArr[0] = floor(pos);
  posArr[1] = ((int)(pos*100))%100;
  // We get the decimal part by taking the remainder with modulo.
  
  Wire.write(posArr, 2);
}

void loop() {
  static int16_t Vapp=0;
  static float laste=0;
  static uint32_t lastTime=0;

  //Read Encoder
  pos = (double)motorA.read()*2*PI/3200;

  //PID Math
  float e = pos-desiredPos;
  float de = (e-laste)*1000000/(micros()-lastTime);
  float inte = ((e+laste)/2)*(micros()-lastTime)/1000000;
  Vapp = 255.0/8 * (Kp*e + Kd*de + Ki*inte);
  if(Vapp>255)Vapp=255; //Saturation
  if(Vapp<-255)Vapp=-255;

  //Drive Motor
  if(Vapp>0) digitalWrite(M1DIR,HIGH);
  else digitalWrite(M1DIR,LOW);
  analogWrite(M1SPD,abs(Vapp));

  laste=e;
  lastTime=micros();

  Serial.print("pos: ");
  Serial.println(pos);

  sendData();

  delay(20);
}
